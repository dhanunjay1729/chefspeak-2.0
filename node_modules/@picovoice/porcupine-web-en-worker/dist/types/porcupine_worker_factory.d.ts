import { PorcupineKeyword } from '@picovoice/porcupine-web-core';
export default class PorcupineWorkerFactory {
    private constructor();
    /**
     * Create Porcupine web worker instances. The promise resolves when the worker is ready to process
     * voice data (perhaps from WebVoiceProcessor).
     *
     * @param accessKey - AccessKey generated by Picovoice Console
     * @param keywords - Builtin or Base64 representations of keywords and their sensitivities.
     * @param keywordDetectionCallback - User-defined callback invoked upon detection of the wake phrase.
     * The only input argument is the keyword label defined at initialization.
     * @param processErrorCallback - User-defined callback invoked if any error happens
     * while processing the audio stream. Its only input argument is the error message.
     */
    static create(accessKey: string, keywords: Array<PorcupineKeyword | string> | PorcupineKeyword | string, keywordDetectionCallback?: (label: string) => void, processErrorCallback?: (error: string) => void, start?: boolean): Promise<Worker>;
}
//# sourceMappingURL=porcupine_worker_factory.d.ts.map